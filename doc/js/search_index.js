var search_data = {"index":{"searchIndex":["abstractadaptertest","testadapter","actioncontroller","integration","adapterregistrytest","adaptertest","addcategoryidtoproducts","addcategorytoproducts","addimagetoproducts","addpassworddigesttousers","addremembertokentousers","adduseridproductidtobid","addusernametoproducts","applicationcontroller","applicationhelper","attachmentadaptertest","attachmentcontenttypevalidatortest","attachmenthelpers","attachmentoptionstest","attachmentpresencevalidatortest","attachmentsizevalidatortest","attachmenttest","paperclip","test","bestbay","application","bid","bidscontroller","book","category","contenttypedetectortest","createbids","createcategories","createproducts","createusers","createwatchlists","dropproductidfromcategories","dropproductsusers","dummy","factory","factorygirl","factory","fakemodel","fakeweb","stubsocket","fileadaptertest","filehelpers","filesystemtest","fixcolumnameofproductuserid","fogtest","four","generatortest","geometrytest","haveattachedfilematchertest","htmlselectorshelpers","identityadaptertest","integrationtest","interpolationstest","metaclasstest","mockattachment","mockinterpolator","mockmodel","mockurlgeneratorbuilder","navigationhelpers","niladaptertest","object","one","two","paperclip","abstractadapter","adapterregistry","nohandlererror","attachment","attachmentadapter","attachmentoptions","callbacks","defining","running","classmethods","contenttypedetector","error","errors","commandnotfounderror","infiniteinterpolationerror","notidentifiedbyimagemagickerror","storagemethodnotfound","fileadapter","geometry","glue","helpers","identityadapter","interpolations","logger","niladapter","processor","processorhelpers","railtie","schema","commandrecorder","statements","tabledefinition","shoulda","matchers","haveattachedfilematcher","validateattachmentcontenttypematcher","validateattachmentpresencematcher","validateattachmentsizematcher","storage","filesystem","fog","s3","stringioadapter","style","tempfile","tempfileencoding","tempfilefactory","tempfilefactorytest","thumbnail","uploadedfileadapter","uriadapter","urlgenerator","validators","attachmentcontenttypevalidator","attachmentpresencevalidator","attachmentsizevalidator","classmethods","helpermethods","paperclipgenerator","paperclipmissingattachmentstylestest","papercliptest","dummy2","processortest","product","productscontroller","productshelper","productsusers","railscommandhelpers","removecategoryfromproducts","removeproductidfromcategories","s3livetest","s3test","schematest","sessionscontroller","sessionshelper","staticpagescontroller","stringiofileproxytest","styletest","subdummy","test","unit","testcase","three","thumbnailtest","uploadedfileadaptertest","uploadedfile","uriproxytest","urlgeneratortest","user","usermailer","userscontroller","usershelper","validateattachmentcontenttypematchertest","validateattachmentpresencematchertest","validateattachmentsizematchertest","validatorstest","watchlist","watchlistscontroller","welcomehelper","withinhelpers","[]()","[]()","[]=()","[]=()","about()","accepted_types_and_failures()","add_attachment()","add_attachment()","add_to_watchlist()","all()","all()","allowed_types_allowed?()","allowing()","animated?()","append_to()","append_to_gemfile()","aspect()","assert_file_exists()","assert_file_not_exists()","assert_not_found_response()","assert_success_response()","assign()","attachment()","attachment()","attachment()","attachment_definitions()","attachment_path()","basename()","basename()","bid_success_confirmation()","binmode()","bucket_name()","build_validator()","build_validator()","build_validator()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","check_for_url_clash()","check_validity!()","check_validity!()","class()","class_for()","clear()","clear_processors!()","comment_out_gem_in_gemfile()","configure()","content_type()","content_type()","content_type()","content_type_extension()","convert()","convert_options()","convert_options?()","copy_to_local_file()","copy_to_local_file()","copy_to_local_file()","counter()","create()","create()","create()","create()","create()","create_bucket()","created_at()","crop?()","current_user()","current_user=()","current_user?()","default_options()","define_paperclip_callbacks()","delete()","description()","description()","description()","description()","destroy()","destroy()","destroy()","destroy()","detect()","dirty?()","do_after_all()","do_after_avatar()","do_before_all()","do_before_avatar()","down()","down()","down()","down()","down()","drop_attached_file()","each_instance_with_attachment()","edit()","edit()","eof?()","error_when_not_valid?()","errors()","errors()","escape()","exists?()","exists?()","exists?()","expected_attachment()","expiring_url()","expiring_url()","extended()","extended()","extended()","extension()","extension()","failure_message()","failure_message()","failure_message()","failure_message()","file?()","filename()","fingerprint()","fingerprint()","fingerprint()","fixture_file()","fixture_path()","flush_deletes()","flush_writes()","fog_credentials()","fog_file()","fog_public()","for()","for()","for()","framework_version()","framework_version?()","from_file()","full_title()","full_title()","generate()","generate_migration()","generator_command()","geometry()","greater_than()","handler_for()","has_attached_file()","has_attached_file()","has_column?()","has_generated_url_with_options?()","has_generated_url_with_style_name?()","has_interpolated_attachment?()","has_interpolated_pattern?()","has_interpolated_style_name?()","hash()","hash_key()","have_attached_file()","help()","higher_than_high?()","higher_than_low?()","home()","horizontal?()","http_proxy_host()","http_proxy_password()","http_proxy_port()","http_proxy_user()","id()","id_partition()","identified_as_animated?()","identify()","in()","included()","included()","included()","included?()","index()","index()","initializer()","insert()","inspect()","inspect()","instance()","instance_read()","instance_respond_to?()","instance_write()","interpolate()","interpolate()","interpolates()","io_adapters()","io_adapters=()","larger()","less_than()","list_my_products()","load_processor()","log()","logger=()","lower_than_high?()","lower_than_low?()","make()","make()","make()","make()","make_tmpname()","matches?()","matches?()","matches?()","matches?()","migration_class_name()","migration_file_name()","migration_name()","missing_attachments_styles()","modify_table()","negative_failure_message()","negative_failure_message()","negative_failure_message()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_application_command()","nil?()","no_error_when_valid?()","options()","original_filename()","original_filename()","override_method()","paperclip_fixture()","param()","parse()","parse_credentials()","parse_credentials()","passes_validation_with_size()","path()","path_to()","present?()","processor_options()","processors()","processors()","public_url()","rails_env()","rails_env()","rails_root()","read()","read()","read_timeout=()","rebuild_class()","rebuild_meta_class_of()","rebuild_model()","redirect_back_or()","register()","register_processor()","registered?()","registered_attachments_styles_path()","registration_confirmation()","rejected_types_and_failures()","rejected_types_rejected?()","rejecting()","remove_attachment()","reprocess!()","require_everything_in_directory()","reset_class()","reset_duplicate_clash_check!()","reset_table()","resize_to()","respond_to?()","responds?()","run()","run_paperclip_callbacks()","run_paperclip_callbacks()","runner_command()","s3_bucket()","s3_credentials()","s3_files_for()","s3_headers_for()","s3_host_alias()","s3_host_name()","s3_interface()","s3_object()","s3_permissions()","s3_protocol()","s3_url_options()","sanitize_hash()","save()","save_current_attachments_styles!()","search()","selector_for()","set_permissions()","setup()","setup()","setup()","setup()","setup()","setup()","setup()","setup()","should_accept_dummy_class()","should_allow_attachment_file_size()","should_have_attached_file()","should_not_allow_attachment_file_size()","should_reject_dummy_class()","should_validate_attachment_content_type()","should_validate_attachment_presence()","should_validate_attachment_size()","show()","show()","show()","show_watchlist()","sign_in()","sign_in()","sign_out()","signed_in?()","signed_in_user()","silence_warnings()","size()","size()","smaller()","source_file_options()","source_root()","square?()","store_location()","stub_paperclip_s3()","style()","styles()","summarize_hash()","teardown()","teardown()","thumb()","time_zone()","timestamp()","to_s()","to_s()","transformation_command()","transformation_to()","type_allowed?()","up()","up()","up()","up()","up()","update()","update()","updated_at()","updated_at()","uploaded_file()","url()","url()","using_http_proxy?()","valid_attributes()","valid_session()","validate()","validate_attachment_content_type()","validate_attachment_presence()","validate_attachment_size()","validate_each()","validate_each()","validates_attachment()","validates_attachment_content_type()","validates_attachment_presence()","validates_attachment_size()","vertical?()","whiny()","whiny?()","with_exitstatus_returning()","with_scope()","gemfile","rakefile","robots","appraisals","gemfile","license","news","rakefile","upgrading","boot_config","gemfile","preinitializer","usage","text"],"longSearchIndex":["abstractadaptertest","abstractadaptertest::testadapter","actioncontroller","actioncontroller::integration","adapterregistrytest","adapterregistrytest::adaptertest","addcategoryidtoproducts","addcategorytoproducts","addimagetoproducts","addpassworddigesttousers","addremembertokentousers","adduseridproductidtobid","addusernametoproducts","applicationcontroller","applicationhelper","attachmentadaptertest","attachmentcontenttypevalidatortest","attachmenthelpers","attachmentoptionstest","attachmentpresencevalidatortest","attachmentsizevalidatortest","attachmenttest","attachmenttest::paperclip","attachmenttest::paperclip::test","bestbay","bestbay::application","bid","bidscontroller","book","category","contenttypedetectortest","createbids","createcategories","createproducts","createusers","createwatchlists","dropproductidfromcategories","dropproductsusers","dummy","factory","factorygirl","factorygirl::factory","fakemodel","fakeweb","fakeweb::stubsocket","fileadaptertest","filehelpers","filesystemtest","fixcolumnameofproductuserid","fogtest","four","generatortest","geometrytest","haveattachedfilematchertest","htmlselectorshelpers","identityadaptertest","integrationtest","interpolationstest","metaclasstest","mockattachment","mockinterpolator","mockmodel","mockurlgeneratorbuilder","navigationhelpers","niladaptertest","object","one","one::two","paperclip","paperclip::abstractadapter","paperclip::adapterregistry","paperclip::adapterregistry::nohandlererror","paperclip::attachment","paperclip::attachmentadapter","paperclip::attachmentoptions","paperclip::callbacks","paperclip::callbacks::defining","paperclip::callbacks::running","paperclip::classmethods","paperclip::contenttypedetector","paperclip::error","paperclip::errors","paperclip::errors::commandnotfounderror","paperclip::errors::infiniteinterpolationerror","paperclip::errors::notidentifiedbyimagemagickerror","paperclip::errors::storagemethodnotfound","paperclip::fileadapter","paperclip::geometry","paperclip::glue","paperclip::helpers","paperclip::identityadapter","paperclip::interpolations","paperclip::logger","paperclip::niladapter","paperclip::processor","paperclip::processorhelpers","paperclip::railtie","paperclip::schema","paperclip::schema::commandrecorder","paperclip::schema::statements","paperclip::schema::tabledefinition","paperclip::shoulda","paperclip::shoulda::matchers","paperclip::shoulda::matchers::haveattachedfilematcher","paperclip::shoulda::matchers::validateattachmentcontenttypematcher","paperclip::shoulda::matchers::validateattachmentpresencematcher","paperclip::shoulda::matchers::validateattachmentsizematcher","paperclip::storage","paperclip::storage::filesystem","paperclip::storage::fog","paperclip::storage::s3","paperclip::stringioadapter","paperclip::style","paperclip::tempfile","paperclip::tempfileencoding","paperclip::tempfilefactory","paperclip::tempfilefactorytest","paperclip::thumbnail","paperclip::uploadedfileadapter","paperclip::uriadapter","paperclip::urlgenerator","paperclip::validators","paperclip::validators::attachmentcontenttypevalidator","paperclip::validators::attachmentpresencevalidator","paperclip::validators::attachmentsizevalidator","paperclip::validators::classmethods","paperclip::validators::helpermethods","paperclipgenerator","paperclipmissingattachmentstylestest","papercliptest","papercliptest::dummy2","processortest","product","productscontroller","productshelper","productsusers","railscommandhelpers","removecategoryfromproducts","removeproductidfromcategories","s3livetest","s3test","schematest","sessionscontroller","sessionshelper","staticpagescontroller","stringiofileproxytest","styletest","subdummy","test","test::unit","test::unit::testcase","three","thumbnailtest","uploadedfileadaptertest","uploadedfileadaptertest::uploadedfile","uriproxytest","urlgeneratortest","user","usermailer","userscontroller","usershelper","validateattachmentcontenttypematchertest","validateattachmentpresencematchertest","validateattachmentsizematchertest","validatorstest","watchlist","watchlistscontroller","welcomehelper","withinhelpers","paperclip::interpolations::[]()","paperclip::style#[]()","paperclip::interpolations::[]=()","paperclip::style#[]=()","staticpagescontroller#about()","paperclip::shoulda::matchers::validateattachmentcontenttypematcher#accepted_types_and_failures()","paperclip::schema::commandrecorder#add_attachment()","paperclip::schema::statements#add_attachment()","productscontroller#add_to_watchlist()","attachmenttest#all()","paperclip::interpolations::all()","paperclip::shoulda::matchers::validateattachmentcontenttypematcher#allowed_types_allowed?()","paperclip::shoulda::matchers::validateattachmentcontenttypematcher#allowing()","paperclip::thumbnail#animated?()","filehelpers#append_to()","filehelpers#append_to_gemfile()","paperclip::geometry#aspect()","object#assert_file_exists()","object#assert_file_not_exists()","object#assert_not_found_response()","object#assert_success_response()","paperclip::attachment#assign()","object#attachment()","paperclip::interpolations#attachment()","paperclip::schema::tabledefinition#attachment()","paperclip::classmethods#attachment_definitions()","attachmenthelpers#attachment_path()","paperclip::interpolations#basename()","paperclip::tempfilefactory#basename()","usermailer#bid_success_confirmation()","paperclip::tempfileencoding#binmode()","paperclip::storage::s3#bucket_name()","attachmentcontenttypevalidatortest#build_validator()","attachmentpresencevalidatortest#build_validator()","attachmentsizevalidatortest#build_validator()","addcategoryidtoproducts#change()","addcategorytoproducts#change()","addimagetoproducts#change()","addpassworddigesttousers#change()","addremembertokentousers#change()","adduseridproductidtobid#change()","addusernametoproducts#change()","createbids#change()","createcategories#change()","createproducts#change()","createusers#change()","createwatchlists#change()","fixcolumnameofproductuserid#change()","paperclip::helpers#check_for_url_clash()","paperclip::validators::attachmentcontenttypevalidator#check_validity!()","paperclip::validators::attachmentsizevalidator#check_validity!()","paperclip::interpolations#class()","paperclip::helpers#class_for()","paperclip::attachment#clear()","paperclip::processorhelpers#clear_processors!()","filehelpers#comment_out_gem_in_gemfile()","paperclip::helpers#configure()","abstractadaptertest::testadapter#content_type()","paperclip::attachment#content_type()","paperclip::niladapter#content_type()","paperclip::interpolations#content_type_extension()","paperclip::processor#convert()","paperclip::style#convert_options()","paperclip::thumbnail#convert_options?()","paperclip::storage#copy_to_local_file()","paperclip::storage::fog#copy_to_local_file()","paperclip::storage::s3#copy_to_local_file()","s3test#counter()","bidscontroller#create()","productscontroller#create()","sessionscontroller#create()","userscontroller#create()","watchlistscontroller#create()","paperclip::storage::s3#create_bucket()","paperclip::attachment#created_at()","paperclip::thumbnail#crop?()","sessionshelper#current_user()","sessionshelper#current_user=()","sessionshelper#current_user?()","paperclip::attachment::default_options()","paperclip::callbacks::defining#define_paperclip_callbacks()","watchlistscontroller#delete()","paperclip::shoulda::matchers::haveattachedfilematcher#description()","paperclip::shoulda::matchers::validateattachmentcontenttypematcher#description()","paperclip::shoulda::matchers::validateattachmentpresencematcher#description()","paperclip::shoulda::matchers::validateattachmentsizematcher#description()","paperclip::attachment#destroy()","productscontroller#destroy()","sessionscontroller#destroy()","userscontroller#destroy()","paperclip::contenttypedetector#detect()","paperclip::attachment#dirty?()","attachmenttest#do_after_all()","attachmenttest#do_after_avatar()","attachmenttest#do_before_all()","attachmenttest#do_before_avatar()","dropproductidfromcategories#down()","dropproductsusers#down()","productsusers#down()","removecategoryfromproducts#down()","removeproductidfromcategories#down()","paperclip::schema::statements#drop_attached_file()","paperclip::helpers#each_instance_with_attachment()","productscontroller#edit()","userscontroller#edit()","paperclip::niladapter#eof?()","paperclip::shoulda::matchers::validateattachmentpresencematcher#error_when_not_valid?()","fakemodel#errors()","paperclip::attachment#errors()","urlgeneratortest#escape()","paperclip::storage::filesystem#exists?()","paperclip::storage::fog#exists?()","paperclip::storage::s3#exists?()","paperclip::shoulda::matchers::validateattachmentcontenttypematcher#expected_attachment()","paperclip::storage::fog#expiring_url()","paperclip::storage::s3#expiring_url()","paperclip::storage::filesystem::extended()","paperclip::storage::fog::extended()","paperclip::storage::s3::extended()","paperclip::interpolations#extension()","paperclip::tempfilefactory#extension()","paperclip::shoulda::matchers::haveattachedfilematcher#failure_message()","paperclip::shoulda::matchers::validateattachmentcontenttypematcher#failure_message()","paperclip::shoulda::matchers::validateattachmentpresencematcher#failure_message()","paperclip::shoulda::matchers::validateattachmentsizematcher#failure_message()","paperclip::attachment#file?()","paperclip::interpolations#filename()","paperclip::abstractadapter#fingerprint()","paperclip::attachment#fingerprint()","paperclip::interpolations#fingerprint()","object#fixture_file()","attachmenthelpers#fixture_path()","paperclip::storage::fog#flush_deletes()","paperclip::storage::fog#flush_writes()","paperclip::storage::fog#fog_credentials()","paperclip::storage::fog#fog_file()","paperclip::storage::fog#fog_public()","mockurlgeneratorbuilder#for()","paperclip::adapterregistry#for()","paperclip::urlgenerator#for()","railscommandhelpers#framework_version()","railscommandhelpers#framework_version?()","paperclip::geometry::from_file()","applicationhelper#full_title()","object#full_title()","paperclip::tempfilefactory#generate()","paperclipgenerator#generate_migration()","railscommandhelpers#generator_command()","paperclip::style#geometry()","paperclip::shoulda::matchers::validateattachmentsizematcher#greater_than()","paperclip::adapterregistry#handler_for()","paperclip::classmethods#has_attached_file()","paperclip::schema::tabledefinition#has_attached_file()","paperclip::shoulda::matchers::haveattachedfilematcher#has_column?()","mockurlgeneratorbuilder#has_generated_url_with_options?()","mockurlgeneratorbuilder#has_generated_url_with_style_name?()","mockinterpolator#has_interpolated_attachment?()","mockinterpolator#has_interpolated_pattern?()","mockinterpolator#has_interpolated_style_name?()","paperclip::interpolations#hash()","paperclip::attachment#hash_key()","paperclip::shoulda::matchers#have_attached_file()","staticpagescontroller#help()","paperclip::shoulda::matchers::validateattachmentsizematcher#higher_than_high?()","paperclip::shoulda::matchers::validateattachmentsizematcher#higher_than_low?()","staticpagescontroller#home()","paperclip::geometry#horizontal?()","paperclip::storage::s3#http_proxy_host()","paperclip::storage::s3#http_proxy_password()","paperclip::storage::s3#http_proxy_port()","paperclip::storage::s3#http_proxy_user()","paperclip::interpolations#id()","paperclip::interpolations#id_partition()","paperclip::thumbnail#identified_as_animated?()","paperclip::processor#identify()","paperclip::shoulda::matchers::validateattachmentsizematcher#in()","paperclip::callbacks::included()","paperclip::glue::included()","paperclip::schema::included()","paperclip::shoulda::matchers::haveattachedfilematcher#included?()","productscontroller#index()","watchlistscontroller#index()","mockurlgeneratorbuilder#initializer()","paperclip::railtie::insert()","paperclip::abstractadapter#inspect()","paperclip::geometry#inspect()","mockattachment#instance()","paperclip::attachment#instance_read()","paperclip::attachment#instance_respond_to?()","paperclip::attachment#instance_write()","mockinterpolator#interpolate()","paperclip::interpolations::interpolate()","paperclip::helpers#interpolates()","paperclip::io_adapters()","paperclip::io_adapters=()","paperclip::geometry#larger()","paperclip::shoulda::matchers::validateattachmentsizematcher#less_than()","productscontroller#list_my_products()","paperclip::processorhelpers#load_processor()","paperclip::logger#log()","paperclip::logger#logger=()","paperclip::shoulda::matchers::validateattachmentsizematcher#lower_than_high?()","paperclip::shoulda::matchers::validateattachmentsizematcher#lower_than_low?()","paperclip::processor::make()","paperclip::processor#make()","paperclip::thumbnail#make()","papercliptest#make()","paperclip::tempfile#make_tmpname()","paperclip::shoulda::matchers::haveattachedfilematcher#matches?()","paperclip::shoulda::matchers::validateattachmentcontenttypematcher#matches?()","paperclip::shoulda::matchers::validateattachmentpresencematcher#matches?()","paperclip::shoulda::matchers::validateattachmentsizematcher#matches?()","paperclipgenerator#migration_class_name()","paperclipgenerator#migration_file_name()","paperclipgenerator#migration_name()","paperclip::missing_attachments_styles()","object#modify_table()","paperclip::shoulda::matchers::haveattachedfilematcher#negative_failure_message()","paperclip::shoulda::matchers::validateattachmentpresencematcher#negative_failure_message()","paperclip::shoulda::matchers::validateattachmentsizematcher#negative_failure_message()","adapterregistrytest::adaptertest::new()","mockattachment::new()","mockinterpolator::new()","mockurlgeneratorbuilder#new()","paperclip::adapterregistry::new()","paperclip::attachment::new()","paperclip::attachmentadapter::new()","paperclip::attachmentoptions::new()","paperclip::contenttypedetector::new()","paperclip::fileadapter::new()","paperclip::geometry::new()","paperclip::identityadapter#new()","paperclip::niladapter::new()","paperclip::processor::new()","paperclip::shoulda::matchers::haveattachedfilematcher::new()","paperclip::shoulda::matchers::validateattachmentcontenttypematcher::new()","paperclip::shoulda::matchers::validateattachmentpresencematcher::new()","paperclip::shoulda::matchers::validateattachmentsizematcher::new()","paperclip::stringioadapter::new()","paperclip::style::new()","paperclip::thumbnail::new()","paperclip::uploadedfileadapter::new()","paperclip::uriadapter::new()","paperclip::urlgenerator::new()","paperclip::validators::attachmentcontenttypevalidator::new()","paperclip::validators::attachmentsizevalidator::new()","productscontroller#new()","sessionscontroller#new()","userscontroller#new()","railscommandhelpers#new_application_command()","paperclip::niladapter#nil?()","paperclip::shoulda::matchers::validateattachmentpresencematcher#no_error_when_valid?()","paperclip::options()","paperclip::attachment#original_filename()","paperclip::niladapter#original_filename()","paperclip::shoulda::matchers::validateattachmentsizematcher#override_method()","paperclip::shoulda#paperclip_fixture()","paperclip::interpolations#param()","paperclip::geometry::parse()","paperclip::storage::fog#parse_credentials()","paperclip::storage::s3#parse_credentials()","paperclip::shoulda::matchers::validateattachmentsizematcher#passes_validation_with_size()","paperclip::attachment#path()","navigationhelpers#path_to()","paperclip::attachment#present?()","paperclip::style#processor_options()","paperclip::attachment#processors()","paperclip::style#processors()","paperclip::storage::fog#public_url()","paperclip::interpolations#rails_env()","s3test#rails_env()","paperclip::interpolations#rails_root()","paperclip::abstractadapter#read()","paperclip::niladapter#read()","fakeweb::stubsocket#read_timeout=()","object#rebuild_class()","object#rebuild_meta_class_of()","object#rebuild_model()","sessionshelper#redirect_back_or()","paperclip::adapterregistry#register()","paperclip::processorhelpers#register_processor()","paperclip::adapterregistry#registered?()","paperclip::registered_attachments_styles_path()","usermailer#registration_confirmation()","paperclip::shoulda::matchers::validateattachmentcontenttypematcher#rejected_types_and_failures()","paperclip::shoulda::matchers::validateattachmentcontenttypematcher#rejected_types_rejected?()","paperclip::shoulda::matchers::validateattachmentcontenttypematcher#rejecting()","paperclip::schema::statements#remove_attachment()","paperclip::attachment#reprocess!()","object#require_everything_in_directory()","object#reset_class()","paperclip::helpers#reset_duplicate_clash_check!()","object#reset_table()","paperclip::geometry#resize_to()","mockattachment#respond_to?()","paperclip::shoulda::matchers::haveattachedfilematcher#responds?()","paperclip::helpers#run()","fakemodel#run_paperclip_callbacks()","paperclip::callbacks::running#run_paperclip_callbacks()","railscommandhelpers#runner_command()","paperclip::storage::s3#s3_bucket()","paperclip::storage::s3#s3_credentials()","integrationtest#s3_files_for()","integrationtest#s3_headers_for()","paperclip::storage::s3#s3_host_alias()","paperclip::storage::s3#s3_host_name()","paperclip::storage::s3#s3_interface()","paperclip::storage::s3#s3_object()","paperclip::storage::s3#s3_permissions()","paperclip::storage::s3#s3_protocol()","paperclip::storage::s3#s3_url_options()","paperclip::storage::s3#sanitize_hash()","paperclip::attachment#save()","paperclip::save_current_attachments_styles!()","productscontroller#search()","htmlselectorshelpers#selector_for()","paperclip::storage::s3#set_permissions()","attachmentadaptertest#setup()","attachmentcontenttypevalidatortest#setup()","attachmentpresencevalidatortest#setup()","attachmentsizevalidatortest#setup()","s3test#setup()","schematest#setup()","test::unit::testcase#setup()","validatorstest#setup()","object#should_accept_dummy_class()","attachmentsizevalidatortest::should_allow_attachment_file_size()","paperclip::shoulda#should_have_attached_file()","attachmentsizevalidatortest::should_not_allow_attachment_file_size()","object#should_reject_dummy_class()","paperclip::shoulda#should_validate_attachment_content_type()","paperclip::shoulda#should_validate_attachment_presence()","paperclip::shoulda#should_validate_attachment_size()","bidscontroller#show()","productscontroller#show()","userscontroller#show()","productscontroller#show_watchlist()","object#sign_in()","sessionshelper#sign_in()","sessionshelper#sign_out()","sessionshelper#signed_in?()","sessionshelper#signed_in_user()","object#silence_warnings()","paperclip::attachment#size()","paperclip::niladapter#size()","paperclip::geometry#smaller()","paperclip::style#source_file_options()","paperclipgenerator::source_root()","paperclip::geometry#square?()","sessionshelper#store_location()","paperclip::shoulda#stub_paperclip_s3()","paperclip::interpolations#style()","paperclip::attachment#styles()","paperclip::storage::s3#summarize_hash()","s3test#teardown()","schematest#teardown()","attachmenttest#thumb()","paperclip::attachment#time_zone()","paperclip::interpolations#timestamp()","paperclip::attachment#to_s()","paperclip::geometry#to_s()","paperclip::thumbnail#transformation_command()","paperclip::geometry#transformation_to()","paperclip::shoulda::matchers::validateattachmentcontenttypematcher#type_allowed?()","dropproductidfromcategories#up()","dropproductsusers#up()","productsusers#up()","removecategoryfromproducts#up()","removeproductidfromcategories#up()","productscontroller#update()","userscontroller#update()","paperclip::attachment#updated_at()","paperclip::interpolations#updated_at()","paperclip::attachment#uploaded_file()","paperclip::attachment#url()","paperclip::interpolations#url()","paperclip::storage::s3#using_http_proxy?()","object#valid_attributes()","object#valid_session()","paperclip::validators::attachmentpresencevalidator#validate()","paperclip::shoulda::matchers#validate_attachment_content_type()","paperclip::shoulda::matchers#validate_attachment_presence()","paperclip::shoulda::matchers#validate_attachment_size()","paperclip::validators::attachmentcontenttypevalidator#validate_each()","paperclip::validators::attachmentsizevalidator#validate_each()","paperclip::validators::classmethods#validates_attachment()","paperclip::validators::helpermethods#validates_attachment_content_type()","paperclip::validators::helpermethods#validates_attachment_presence()","paperclip::validators::helpermethods#validates_attachment_size()","paperclip::geometry#vertical?()","paperclip::style#whiny()","paperclip::style#whiny?()","object#with_exitstatus_returning()","withinhelpers#with_scope()","","","","","","","","","","","","","",""],"info":[["AbstractAdapterTest","","AbstractAdapterTest.html","",""],["AbstractAdapterTest::TestAdapter","","AbstractAdapterTest/TestAdapter.html","",""],["ActionController","","ActionController.html","",""],["ActionController::Integration","","ActionController/Integration.html","",""],["AdapterRegistryTest","","AdapterRegistryTest.html","",""],["AdapterRegistryTest::AdapterTest","","AdapterRegistryTest/AdapterTest.html","",""],["AddCategoryIdToProducts","","AddCategoryIdToProducts.html","",""],["AddCategoryToProducts","","AddCategoryToProducts.html","",""],["AddImageToProducts","","AddImageToProducts.html","",""],["AddPasswordDigestToUsers","","AddPasswordDigestToUsers.html","",""],["AddRememberTokenToUsers","","AddRememberTokenToUsers.html","",""],["AddUserIdProductIdToBid","","AddUserIdProductIdToBid.html","",""],["AddUserNameToProducts","","AddUserNameToProducts.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["AttachmentAdapterTest","","AttachmentAdapterTest.html","",""],["AttachmentContentTypeValidatorTest","","AttachmentContentTypeValidatorTest.html","",""],["AttachmentHelpers","","AttachmentHelpers.html","",""],["AttachmentOptionsTest","","AttachmentOptionsTest.html","",""],["AttachmentPresenceValidatorTest","","AttachmentPresenceValidatorTest.html","",""],["AttachmentSizeValidatorTest","","AttachmentSizeValidatorTest.html","",""],["AttachmentTest","","AttachmentTest.html","",""],["AttachmentTest::Paperclip","","AttachmentTest/Paperclip.html","",""],["AttachmentTest::Paperclip::Test","","AttachmentTest/Paperclip/Test.html","",""],["BestBay","","BestBay.html","",""],["BestBay::Application","","BestBay/Application.html","",""],["Bid","","Bid.html","","<p>Rdoc for Bid table\n<p>Bidding\n<p>This is a heading\n"],["BidsController","","BidsController.html","",""],["Book","","Book.html","",""],["Category","","Category.html","",""],["ContentTypeDetectorTest","","ContentTypeDetectorTest.html","",""],["CreateBids","","CreateBids.html","",""],["CreateCategories","","CreateCategories.html","",""],["CreateProducts","","CreateProducts.html","",""],["CreateUsers","","CreateUsers.html","",""],["CreateWatchlists","","CreateWatchlists.html","",""],["DropProductIdFromCategories","","DropProductIdFromCategories.html","",""],["DropProductsUsers","","DropProductsUsers.html","",""],["Dummy","","Dummy.html","",""],["Factory","","Factory.html","",""],["FactoryGirl","","FactoryGirl.html","",""],["FactoryGirl::Factory","","FactoryGirl/Factory.html","",""],["FakeModel","","FakeModel.html","",""],["FakeWeb","","FakeWeb.html","",""],["FakeWeb::StubSocket","","FakeWeb/StubSocket.html","",""],["FileAdapterTest","","FileAdapterTest.html","",""],["FileHelpers","","FileHelpers.html","",""],["FileSystemTest","","FileSystemTest.html","",""],["FixColumNameOfProductUserId","","FixColumNameOfProductUserId.html","",""],["FogTest","","FogTest.html","",""],["Four","","Four.html","",""],["GeneratorTest","","GeneratorTest.html","",""],["GeometryTest","","GeometryTest.html","",""],["HaveAttachedFileMatcherTest","","HaveAttachedFileMatcherTest.html","",""],["HtmlSelectorsHelpers","","HtmlSelectorsHelpers.html","",""],["IdentityAdapterTest","","IdentityAdapterTest.html","",""],["IntegrationTest","","IntegrationTest.html","",""],["InterpolationsTest","","InterpolationsTest.html","",""],["MetaClassTest","","MetaClassTest.html","",""],["MockAttachment","","MockAttachment.html","",""],["MockInterpolator","","MockInterpolator.html","",""],["MockModel","","MockModel.html","",""],["MockUrlGeneratorBuilder","","MockUrlGeneratorBuilder.html","",""],["NavigationHelpers","","NavigationHelpers.html","",""],["NilAdapterTest","","NilAdapterTest.html","",""],["Object","","Object.html","",""],["One","","One.html","",""],["One::Two","","One/Two.html","",""],["Paperclip","","Paperclip.html","","<p>The base module that gets included in ActiveRecord::Base. See the\ndocumentation for Paperclip::ClassMethods …\n"],["Paperclip::AbstractAdapter","","Paperclip/AbstractAdapter.html","",""],["Paperclip::AdapterRegistry","","Paperclip/AdapterRegistry.html","",""],["Paperclip::AdapterRegistry::NoHandlerError","","Paperclip/AdapterRegistry/NoHandlerError.html","",""],["Paperclip::Attachment","","Paperclip/Attachment.html","","<p>The Attachment class manages the files for a given attachment. It saves\nwhen the model saves, deletes …\n"],["Paperclip::AttachmentAdapter","","Paperclip/AttachmentAdapter.html","",""],["Paperclip::AttachmentOptions","","Paperclip/AttachmentOptions.html","",""],["Paperclip::Callbacks","","Paperclip/Callbacks.html","",""],["Paperclip::Callbacks::Defining","","Paperclip/Callbacks/Defining.html","",""],["Paperclip::Callbacks::Running","","Paperclip/Callbacks/Running.html","",""],["Paperclip::ClassMethods","","Paperclip/ClassMethods.html","",""],["Paperclip::ContentTypeDetector","","Paperclip/ContentTypeDetector.html","",""],["Paperclip::Error","","Paperclip/Error.html","","<p>A base error class for Paperclip. Most of the error that will be thrown\nfrom Paperclip will inherits …\n"],["Paperclip::Errors","","Paperclip/Errors.html","",""],["Paperclip::Errors::CommandNotFoundError","","Paperclip/Errors/CommandNotFoundError.html","","<p>Will be thrown when a command or executable is not found.\n"],["Paperclip::Errors::InfiniteInterpolationError","","Paperclip/Errors/InfiniteInterpolationError.html","","<p>Will be thrown if the interpolation is creating an infinite loop. If you\nare creating an interpolator …\n"],["Paperclip::Errors::NotIdentifiedByImageMagickError","","Paperclip/Errors/NotIdentifiedByImageMagickError.html","","<p>Will be thrown when ImageMagic cannot determine the uploaded file’s\nmetadata, usually this would mean …\n"],["Paperclip::Errors::StorageMethodNotFound","","Paperclip/Errors/StorageMethodNotFound.html","","<p>Will be thrown when a storage method is not found.\n"],["Paperclip::FileAdapter","","Paperclip/FileAdapter.html","",""],["Paperclip::Geometry","","Paperclip/Geometry.html","","<p>Defines the geometry of an image.\n"],["Paperclip::Glue","","Paperclip/Glue.html","",""],["Paperclip::Helpers","","Paperclip/Helpers.html","",""],["Paperclip::IdentityAdapter","","Paperclip/IdentityAdapter.html","",""],["Paperclip::Interpolations","","Paperclip/Interpolations.html","","<p>This module contains all the methods that are available for interpolation\nin paths and urls. To add your …\n"],["Paperclip::Logger","","Paperclip/Logger.html","",""],["Paperclip::NilAdapter","","Paperclip/NilAdapter.html","",""],["Paperclip::Processor","","Paperclip/Processor.html","","<p>Paperclip processors allow you to modify attached files when they are\nattached in any way you are able. …\n"],["Paperclip::ProcessorHelpers","","Paperclip/ProcessorHelpers.html","",""],["Paperclip::Railtie","","Paperclip/Railtie.html","",""],["Paperclip::Schema","","Paperclip/Schema.html","","<p>Provides helper methods that can be used in migrations.\n"],["Paperclip::Schema::CommandRecorder","","Paperclip/Schema/CommandRecorder.html","",""],["Paperclip::Schema::Statements","","Paperclip/Schema/Statements.html","",""],["Paperclip::Schema::TableDefinition","","Paperclip/Schema/TableDefinition.html","",""],["Paperclip::Shoulda","","Paperclip/Shoulda.html","","<p>Paperclip Shoulda Macros\n<p>These macros are intended for use with shoulda, and will be included into\nyour …\n"],["Paperclip::Shoulda::Matchers","","Paperclip/Shoulda/Matchers.html","","<p>Provides RSpec-compatible &amp; Test::Unit-compatible matchers for testing\nPaperclip attachments.\n<p><strong>RSpec</strong> ...\n"],["Paperclip::Shoulda::Matchers::HaveAttachedFileMatcher","","Paperclip/Shoulda/Matchers/HaveAttachedFileMatcher.html","",""],["Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html","",""],["Paperclip::Shoulda::Matchers::ValidateAttachmentPresenceMatcher","","Paperclip/Shoulda/Matchers/ValidateAttachmentPresenceMatcher.html","",""],["Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html","",""],["Paperclip::Storage","","Paperclip/Storage.html","",""],["Paperclip::Storage::Filesystem","","Paperclip/Storage/Filesystem.html","","<p>The default place to store attachments is in the filesystem. Files on the\nlocal filesystem can be very …\n"],["Paperclip::Storage::Fog","","Paperclip/Storage/Fog.html","","<p>fog is a modern and versatile cloud computing library for Ruby. Among\nothers, it supports Amazon S3 to …\n"],["Paperclip::Storage::S3","","Paperclip/Storage/S3.html","","<p>Amazon’s S3 file hosting service is a scalable, easy place to store files\nfor distribution. You can find …\n"],["Paperclip::StringioAdapter","","Paperclip/StringioAdapter.html","",""],["Paperclip::Style","","Paperclip/Style.html","","<p>The Style class holds the definition of a thumbnail style,  applying\nwhatever processing is required …\n"],["Paperclip::Tempfile","","Paperclip/Tempfile.html","","<p>Overriding some implementation of Tempfile\n"],["Paperclip::TempfileEncoding","","Paperclip/TempfileEncoding.html","",""],["Paperclip::TempfileFactory","","Paperclip/TempfileFactory.html","",""],["Paperclip::TempfileFactoryTest","","Paperclip/TempfileFactoryTest.html","",""],["Paperclip::Thumbnail","","Paperclip/Thumbnail.html","","<p>Handles thumbnailing images that are uploaded.\n"],["Paperclip::UploadedFileAdapter","","Paperclip/UploadedFileAdapter.html","",""],["Paperclip::UriAdapter","","Paperclip/UriAdapter.html","",""],["Paperclip::UrlGenerator","","Paperclip/UrlGenerator.html","",""],["Paperclip::Validators","","Paperclip/Validators.html","",""],["Paperclip::Validators::AttachmentContentTypeValidator","","Paperclip/Validators/AttachmentContentTypeValidator.html","",""],["Paperclip::Validators::AttachmentPresenceValidator","","Paperclip/Validators/AttachmentPresenceValidator.html","",""],["Paperclip::Validators::AttachmentSizeValidator","","Paperclip/Validators/AttachmentSizeValidator.html","",""],["Paperclip::Validators::ClassMethods","","Paperclip/Validators/ClassMethods.html","",""],["Paperclip::Validators::HelperMethods","","Paperclip/Validators/HelperMethods.html","",""],["PaperclipGenerator","","PaperclipGenerator.html","",""],["PaperclipMissingAttachmentStylesTest","","PaperclipMissingAttachmentStylesTest.html","",""],["PaperclipTest","","PaperclipTest.html","",""],["PaperclipTest::Dummy2","","PaperclipTest/Dummy2.html","",""],["ProcessorTest","","ProcessorTest.html","",""],["Product","","Product.html","",""],["ProductsController","","ProductsController.html","",""],["ProductsHelper","","ProductsHelper.html","",""],["ProductsUsers","","ProductsUsers.html","",""],["RailsCommandHelpers","","RailsCommandHelpers.html","",""],["RemoveCategoryFromProducts","","RemoveCategoryFromProducts.html","",""],["RemoveProductIdFromCategories","","RemoveProductIdFromCategories.html","",""],["S3LiveTest","","S3LiveTest.html","",""],["S3Test","","S3Test.html","",""],["SchemaTest","","SchemaTest.html","",""],["SessionsController","","SessionsController.html","",""],["SessionsHelper","","SessionsHelper.html","",""],["StaticPagesController","","StaticPagesController.html","",""],["StringioFileProxyTest","","StringioFileProxyTest.html","",""],["StyleTest","","StyleTest.html","",""],["SubDummy","","SubDummy.html","",""],["Test","","Test.html","",""],["Test::Unit","","Test/Unit.html","",""],["Test::Unit::TestCase","","Test/Unit/TestCase.html","",""],["Three","","Three.html","",""],["ThumbnailTest","","ThumbnailTest.html","",""],["UploadedFileAdapterTest","","UploadedFileAdapterTest.html","",""],["UploadedFileAdapterTest::UploadedFile","","UploadedFileAdapterTest/UploadedFile.html","",""],["UriProxyTest","","UriProxyTest.html","",""],["UrlGeneratorTest","","UrlGeneratorTest.html","",""],["User","","User.html","","<p>Schema Information\n<p>Table name: users\n\n<pre>id              :integer          not null, primary key\nname      ...</pre>\n"],["UserMailer","","UserMailer.html","",""],["UsersController","","UsersController.html","",""],["UsersHelper","","UsersHelper.html","",""],["ValidateAttachmentContentTypeMatcherTest","","ValidateAttachmentContentTypeMatcherTest.html","",""],["ValidateAttachmentPresenceMatcherTest","","ValidateAttachmentPresenceMatcherTest.html","",""],["ValidateAttachmentSizeMatcherTest","","ValidateAttachmentSizeMatcherTest.html","",""],["ValidatorsTest","","ValidatorsTest.html","",""],["Watchlist","","Watchlist.html","",""],["WatchlistsController","","WatchlistsController.html","",""],["WelcomeHelper","","WelcomeHelper.html","",""],["WithinHelpers","","WithinHelpers.html","",""],["[]","Paperclip::Interpolations","Paperclip/Interpolations.html#method-c-5B-5D","(name)","<p>Hash access of interpolations. Included only for compatibility, and is not\nintended for normal use.\n"],["[]","Paperclip::Style","Paperclip/Style.html#method-i-5B-5D","(key)","<p>Supports getting and setting style properties with hash notation to ensure\nbackwards-compatibility eg. …\n"],["[]=","Paperclip::Interpolations","Paperclip/Interpolations.html#method-c-5B-5D-3D","(name, block)","<p>Hash assignment of interpolations. Included only for compatibility, and is\nnot intended for normal use. …\n"],["[]=","Paperclip::Style","Paperclip/Style.html#method-i-5B-5D-3D","(key, value)",""],["about","StaticPagesController","StaticPagesController.html#method-i-about","()",""],["accepted_types_and_failures","Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html#method-i-accepted_types_and_failures","()",""],["add_attachment","Paperclip::Schema::CommandRecorder","Paperclip/Schema/CommandRecorder.html#method-i-add_attachment","(*args)",""],["add_attachment","Paperclip::Schema::Statements","Paperclip/Schema/Statements.html#method-i-add_attachment","(table_name, *attachment_names)",""],["add_to_watchlist","ProductsController","ProductsController.html#method-i-add_to_watchlist","()",""],["all","AttachmentTest","AttachmentTest.html#method-i-all","()",""],["all","Paperclip::Interpolations","Paperclip/Interpolations.html#method-c-all","()","<p>Returns a sorted list of all interpolations.\n"],["allowed_types_allowed?","Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html#method-i-allowed_types_allowed-3F","()",""],["allowing","Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html#method-i-allowing","(*types)",""],["animated?","Paperclip::Thumbnail","Paperclip/Thumbnail.html#method-i-animated-3F","()","<p>Return true if the format is animated\n"],["append_to","FileHelpers","FileHelpers.html#method-i-append_to","(path, contents)",""],["append_to_gemfile","FileHelpers","FileHelpers.html#method-i-append_to_gemfile","(contents)",""],["aspect","Paperclip::Geometry","Paperclip/Geometry.html#method-i-aspect","()","<p>The aspect ratio of the dimensions.\n"],["assert_file_exists","Object","Object.html#method-i-assert_file_exists","(path)",""],["assert_file_not_exists","Object","Object.html#method-i-assert_file_not_exists","(path)",""],["assert_not_found_response","Object","Object.html#method-i-assert_not_found_response","(url)",""],["assert_success_response","Object","Object.html#method-i-assert_success_response","(url)",""],["assign","Paperclip::Attachment","Paperclip/Attachment.html#method-i-assign","(uploaded_file)","<p>What gets called when you call instance.attachment = File. It clears\nerrors, assigns attributes, and …\n"],["attachment","Object","Object.html#method-i-attachment","(options={})",""],["attachment","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-attachment","(attachment, style_name)","<p>Returns the pluralized form of the attachment name. e.g. “avatars” for an\nattachment of :avatar …\n"],["attachment","Paperclip::Schema::TableDefinition","Paperclip/Schema/TableDefinition.html#method-i-attachment","(*attachment_names)",""],["attachment_definitions","Paperclip::ClassMethods","Paperclip/ClassMethods.html#method-i-attachment_definitions","()","<p>Returns the attachment definitions defined by each call to\nhas_attached_file.\n"],["attachment_path","AttachmentHelpers","AttachmentHelpers.html#method-i-attachment_path","(filename)",""],["basename","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-basename","(attachment, style_name)","<p>Returns the basename of the file. e.g. “file” for “file.jpg”\n"],["basename","Paperclip::TempfileFactory","Paperclip/TempfileFactory.html#method-i-basename","()",""],["bid_success_confirmation","UserMailer","UserMailer.html#method-i-bid_success_confirmation","(user, product)",""],["binmode","Paperclip::TempfileEncoding","Paperclip/TempfileEncoding.html#method-i-binmode","()","<p>This overrides Tempfile#binmode to make sure that the extenal encoding for\nbinary mode is ASCII-8BIT …\n"],["bucket_name","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-bucket_name","()",""],["build_validator","AttachmentContentTypeValidatorTest","AttachmentContentTypeValidatorTest.html#method-i-build_validator","(options)",""],["build_validator","AttachmentPresenceValidatorTest","AttachmentPresenceValidatorTest.html#method-i-build_validator","(options={})",""],["build_validator","AttachmentSizeValidatorTest","AttachmentSizeValidatorTest.html#method-i-build_validator","(options)",""],["change","AddCategoryIdToProducts","AddCategoryIdToProducts.html#method-i-change","()",""],["change","AddCategoryToProducts","AddCategoryToProducts.html#method-i-change","()",""],["change","AddImageToProducts","AddImageToProducts.html#method-i-change","()",""],["change","AddPasswordDigestToUsers","AddPasswordDigestToUsers.html#method-i-change","()",""],["change","AddRememberTokenToUsers","AddRememberTokenToUsers.html#method-i-change","()",""],["change","AddUserIdProductIdToBid","AddUserIdProductIdToBid.html#method-i-change","()",""],["change","AddUserNameToProducts","AddUserNameToProducts.html#method-i-change","()",""],["change","CreateBids","CreateBids.html#method-i-change","()",""],["change","CreateCategories","CreateCategories.html#method-i-change","()",""],["change","CreateProducts","CreateProducts.html#method-i-change","()",""],["change","CreateUsers","CreateUsers.html#method-i-change","()",""],["change","CreateWatchlists","CreateWatchlists.html#method-i-change","()",""],["change","FixColumNameOfProductUserId","FixColumNameOfProductUserId.html#method-i-change","()",""],["check_for_url_clash","Paperclip::Helpers","Paperclip/Helpers.html#method-i-check_for_url_clash","(name,url,klass)",""],["check_validity!","Paperclip::Validators::AttachmentContentTypeValidator","Paperclip/Validators/AttachmentContentTypeValidator.html#method-i-check_validity-21","()",""],["check_validity!","Paperclip::Validators::AttachmentSizeValidator","Paperclip/Validators/AttachmentSizeValidator.html#method-i-check_validity-21","()",""],["class","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-class","(attachment = nil, style_name = nil)","<p>Returns the underscored, pluralized version of the class name. e.g. “users”\nfor the User class. …\n"],["class_for","Paperclip::Helpers","Paperclip/Helpers.html#method-i-class_for","(class_name)",""],["clear","Paperclip::Attachment","Paperclip/Attachment.html#method-i-clear","(*styles_to_clear)","<p>Clears out the attachment. Has the same effect as previously assigning nil\nto the attachment. Does NOT …\n"],["clear_processors!","Paperclip::ProcessorHelpers","Paperclip/ProcessorHelpers.html#method-i-clear_processors-21","()",""],["comment_out_gem_in_gemfile","FileHelpers","FileHelpers.html#method-i-comment_out_gem_in_gemfile","(gemname)",""],["configure","Paperclip::Helpers","Paperclip/Helpers.html#method-i-configure","()",""],["content_type","AbstractAdapterTest::TestAdapter","AbstractAdapterTest/TestAdapter.html#method-i-content_type","()",""],["content_type","Paperclip::Attachment","Paperclip/Attachment.html#method-i-content_type","()","<p>Returns the content_type of the file as originally assigned, and lives in\nthe &lt;attachment&gt;_content_type …\n"],["content_type","Paperclip::NilAdapter","Paperclip/NilAdapter.html#method-i-content_type","()",""],["content_type_extension","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-content_type_extension","(attachment, style_name)","<p>Returns an extension based on the content type. e.g. “jpeg” for\n“image/jpeg”. If …\n"],["convert","Paperclip::Processor","Paperclip/Processor.html#method-i-convert","(arguments = \"\", local_options = {})","<p>The convert method runs the convert binary with the provided arguments. See\nPaperclip.run for the available …\n"],["convert_options","Paperclip::Style","Paperclip/Style.html#method-i-convert_options","()",""],["convert_options?","Paperclip::Thumbnail","Paperclip/Thumbnail.html#method-i-convert_options-3F","()","<p>Returns true if the image is meant to make use of additional convert\noptions.\n"],["copy_to_local_file","Paperclip::Storage","Paperclip/Storage.html#method-i-copy_to_local_file","(style, local_dest_path)",""],["copy_to_local_file","Paperclip::Storage::Fog","Paperclip/Storage/Fog.html#method-i-copy_to_local_file","(style, local_dest_path)",""],["copy_to_local_file","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-copy_to_local_file","(style, local_dest_path)",""],["counter","S3Test","S3Test.html#method-i-counter","()",""],["create","BidsController","BidsController.html#method-i-create","()",""],["create","ProductsController","ProductsController.html#method-i-create","()","<p>POST /products POST /products.json\n"],["create","SessionsController","SessionsController.html#method-i-create","()",""],["create","UsersController","UsersController.html#method-i-create","()",""],["create","WatchlistsController","WatchlistsController.html#method-i-create","()",""],["create_bucket","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-create_bucket","()",""],["created_at","Paperclip::Attachment","Paperclip/Attachment.html#method-i-created_at","()","<p>Returns the creation time of the file as originally assigned, and lives in\nthe &lt;attachment&gt;_created_at …\n"],["crop?","Paperclip::Thumbnail","Paperclip/Thumbnail.html#method-i-crop-3F","()","<p>Returns true if the <code>target_geometry</code> is meant to crop.\n"],["current_user","SessionsHelper","SessionsHelper.html#method-i-current_user","()",""],["current_user=","SessionsHelper","SessionsHelper.html#method-i-current_user-3D","(user)",""],["current_user?","SessionsHelper","SessionsHelper.html#method-i-current_user-3F","(user)",""],["default_options","Paperclip::Attachment","Paperclip/Attachment.html#method-c-default_options","()",""],["define_paperclip_callbacks","Paperclip::Callbacks::Defining","Paperclip/Callbacks/Defining.html#method-i-define_paperclip_callbacks","(*callbacks)",""],["delete","WatchlistsController","WatchlistsController.html#method-i-delete","()",""],["description","Paperclip::Shoulda::Matchers::HaveAttachedFileMatcher","Paperclip/Shoulda/Matchers/HaveAttachedFileMatcher.html#method-i-description","()",""],["description","Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html#method-i-description","()",""],["description","Paperclip::Shoulda::Matchers::ValidateAttachmentPresenceMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentPresenceMatcher.html#method-i-description","()",""],["description","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-description","()",""],["destroy","Paperclip::Attachment","Paperclip/Attachment.html#method-i-destroy","()","<p>Destroys the attachment. Has the same effect as previously assigning nil to\nthe attachment *and saving*. …\n"],["destroy","ProductsController","ProductsController.html#method-i-destroy","()","<p>DELETE /products/1 DELETE /products/1.json\n"],["destroy","SessionsController","SessionsController.html#method-i-destroy","()",""],["destroy","UsersController","UsersController.html#method-i-destroy","()",""],["detect","Paperclip::ContentTypeDetector","Paperclip/ContentTypeDetector.html#method-i-detect","()",""],["dirty?","Paperclip::Attachment","Paperclip/Attachment.html#method-i-dirty-3F","()","<p>Returns true if there are changes that need to be saved.\n"],["do_after_all","AttachmentTest","AttachmentTest.html#method-i-do_after_all","()",""],["do_after_avatar","AttachmentTest","AttachmentTest.html#method-i-do_after_avatar","()",""],["do_before_all","AttachmentTest","AttachmentTest.html#method-i-do_before_all","()",""],["do_before_avatar","AttachmentTest","AttachmentTest.html#method-i-do_before_avatar","()",""],["down","DropProductIdFromCategories","DropProductIdFromCategories.html#method-i-down","()",""],["down","DropProductsUsers","DropProductsUsers.html#method-i-down","()",""],["down","ProductsUsers","ProductsUsers.html#method-i-down","()",""],["down","RemoveCategoryFromProducts","RemoveCategoryFromProducts.html#method-i-down","()",""],["down","RemoveProductIdFromCategories","RemoveProductIdFromCategories.html#method-i-down","()",""],["drop_attached_file","Paperclip::Schema::Statements","Paperclip/Schema/Statements.html#method-i-drop_attached_file","(*args)",""],["each_instance_with_attachment","Paperclip::Helpers","Paperclip/Helpers.html#method-i-each_instance_with_attachment","(klass, name)","<p>Find all instances of the given Active Record model <code>klass</code> with\nattachment <code>name</code>. This method is used by …\n"],["edit","ProductsController","ProductsController.html#method-i-edit","()","<p>GET /products/1/edit\n"],["edit","UsersController","UsersController.html#method-i-edit","()",""],["eof?","Paperclip::NilAdapter","Paperclip/NilAdapter.html#method-i-eof-3F","()",""],["error_when_not_valid?","Paperclip::Shoulda::Matchers::ValidateAttachmentPresenceMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentPresenceMatcher.html#method-i-error_when_not_valid-3F","()",""],["errors","FakeModel","FakeModel.html#method-i-errors","()",""],["errors","Paperclip::Attachment","Paperclip/Attachment.html#method-i-errors","()","<p>Returns an array containing the errors on this attachment.\n"],["escape","UrlGeneratorTest","UrlGeneratorTest.html#method-i-escape","()",""],["exists?","Paperclip::Storage::Filesystem","Paperclip/Storage/Filesystem.html#method-i-exists-3F","(style_name = default_style)",""],["exists?","Paperclip::Storage::Fog","Paperclip/Storage/Fog.html#method-i-exists-3F","(style = default_style)",""],["exists?","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-exists-3F","(style = default_style)",""],["expected_attachment","Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html#method-i-expected_attachment","()",""],["expiring_url","Paperclip::Storage::Fog","Paperclip/Storage/Fog.html#method-i-expiring_url","(time = (Time.now + 3600), style = default_style)",""],["expiring_url","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-expiring_url","(time = 3600, style_name = default_style)",""],["extended","Paperclip::Storage::Filesystem","Paperclip/Storage/Filesystem.html#method-c-extended","(base)",""],["extended","Paperclip::Storage::Fog","Paperclip/Storage/Fog.html#method-c-extended","(base)",""],["extended","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-c-extended","(base)",""],["extension","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-extension","(attachment, style_name)","<p>Returns the extension of the file. e.g. “jpg” for “file.jpg” If the style\nhas a format …\n"],["extension","Paperclip::TempfileFactory","Paperclip/TempfileFactory.html#method-i-extension","()",""],["failure_message","Paperclip::Shoulda::Matchers::HaveAttachedFileMatcher","Paperclip/Shoulda/Matchers/HaveAttachedFileMatcher.html#method-i-failure_message","()",""],["failure_message","Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html#method-i-failure_message","()",""],["failure_message","Paperclip::Shoulda::Matchers::ValidateAttachmentPresenceMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentPresenceMatcher.html#method-i-failure_message","()",""],["failure_message","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-failure_message","()",""],["file?","Paperclip::Attachment","Paperclip/Attachment.html#method-i-file-3F","()","<p>Returns true if a file has been assigned.\n"],["filename","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-filename","(attachment, style_name)","<p>Returns the filename, the same way as “:basename.:extension” would.\n"],["fingerprint","Paperclip::AbstractAdapter","Paperclip/AbstractAdapter.html#method-i-fingerprint","()",""],["fingerprint","Paperclip::Attachment","Paperclip/Attachment.html#method-i-fingerprint","()","<p>Returns the fingerprint of the file, if one’s defined. The fingerprint is\nstored in the &lt;attachment&gt;_fingerpring …\n"],["fingerprint","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-fingerprint","(attachment, style_name)","<p>Returns the fingerprint of the instance.\n"],["fixture_file","Object","Object.html#method-i-fixture_file","(filename)",""],["fixture_path","AttachmentHelpers","AttachmentHelpers.html#method-i-fixture_path","(filename)",""],["flush_deletes","Paperclip::Storage::Fog","Paperclip/Storage/Fog.html#method-i-flush_deletes","()",""],["flush_writes","Paperclip::Storage::Fog","Paperclip/Storage/Fog.html#method-i-flush_writes","()",""],["fog_credentials","Paperclip::Storage::Fog","Paperclip/Storage/Fog.html#method-i-fog_credentials","()",""],["fog_file","Paperclip::Storage::Fog","Paperclip/Storage/Fog.html#method-i-fog_file","()",""],["fog_public","Paperclip::Storage::Fog","Paperclip/Storage/Fog.html#method-i-fog_public","(style = default_style)",""],["for","MockUrlGeneratorBuilder","MockUrlGeneratorBuilder.html#method-i-for","(style_name, options)",""],["for","Paperclip::AdapterRegistry","Paperclip/AdapterRegistry.html#method-i-for","(target)",""],["for","Paperclip::UrlGenerator","Paperclip/UrlGenerator.html#method-i-for","(style_name, options)",""],["framework_version","RailsCommandHelpers","RailsCommandHelpers.html#method-i-framework_version","()",""],["framework_version?","RailsCommandHelpers","RailsCommandHelpers.html#method-i-framework_version-3F","(version_string)",""],["from_file","Paperclip::Geometry","Paperclip/Geometry.html#method-c-from_file","(file)","<p>Uses ImageMagick to determing the dimensions of a file, passed in as either\na File or path. NOTE: (race …\n"],["full_title","ApplicationHelper","ApplicationHelper.html#method-i-full_title","(page_title)","<p>Returns the full title on a per-page basis.\n"],["full_title","Object","Object.html#method-i-full_title","(page_title)",""],["generate","Paperclip::TempfileFactory","Paperclip/TempfileFactory.html#method-i-generate","(name)",""],["generate_migration","PaperclipGenerator","PaperclipGenerator.html#method-i-generate_migration","()",""],["generator_command","RailsCommandHelpers","RailsCommandHelpers.html#method-i-generator_command","()",""],["geometry","Paperclip::Style","Paperclip/Style.html#method-i-geometry","()","<p>returns the geometry string for this style if a proc has been supplied, we\ncall it here\n"],["greater_than","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-greater_than","(size)",""],["handler_for","Paperclip::AdapterRegistry","Paperclip/AdapterRegistry.html#method-i-handler_for","(target)",""],["has_attached_file","Paperclip::ClassMethods","Paperclip/ClassMethods.html#method-i-has_attached_file","(name, options = {})","<p><code>has_attached_file</code> gives the class it is called on an attribute\nthat maps to a file. This is typically ...\n"],["has_attached_file","Paperclip::Schema::TableDefinition","Paperclip/Schema/TableDefinition.html#method-i-has_attached_file","(*attachment_names)",""],["has_column?","Paperclip::Shoulda::Matchers::HaveAttachedFileMatcher","Paperclip/Shoulda/Matchers/HaveAttachedFileMatcher.html#method-i-has_column-3F","()",""],["has_generated_url_with_options?","MockUrlGeneratorBuilder","MockUrlGeneratorBuilder.html#method-i-has_generated_url_with_options-3F","(options)",""],["has_generated_url_with_style_name?","MockUrlGeneratorBuilder","MockUrlGeneratorBuilder.html#method-i-has_generated_url_with_style_name-3F","(style_name)",""],["has_interpolated_attachment?","MockInterpolator","MockInterpolator.html#method-i-has_interpolated_attachment-3F","(attachment)",""],["has_interpolated_pattern?","MockInterpolator","MockInterpolator.html#method-i-has_interpolated_pattern-3F","(pattern)",""],["has_interpolated_style_name?","MockInterpolator","MockInterpolator.html#method-i-has_interpolated_style_name-3F","(style_name)",""],["hash","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-hash","(attachment=nil, style_name=nil)","<p>Returns a the attachment hash.  See Paperclip::Attachment#hash_key for more\ndetails.\n"],["hash_key","Paperclip::Attachment","Paperclip/Attachment.html#method-i-hash_key","(style_name = default_style)","<p>Returns a unique hash suitable for obfuscating the URL of an otherwise\npublicly viewable attachment. …\n"],["have_attached_file","Paperclip::Shoulda::Matchers","Paperclip/Shoulda/Matchers.html#method-i-have_attached_file","(name)","<p>Ensures that the given instance or class has an attachment with the given\nname.\n<p>Example:\n\n<pre>describe User ...</pre>\n"],["help","StaticPagesController","StaticPagesController.html#method-i-help","()",""],["higher_than_high?","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-higher_than_high-3F","()",""],["higher_than_low?","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-higher_than_low-3F","()",""],["home","StaticPagesController","StaticPagesController.html#method-i-home","()",""],["horizontal?","Paperclip::Geometry","Paperclip/Geometry.html#method-i-horizontal-3F","()","<p>True if the dimensions represent a horizontal rectangle\n"],["http_proxy_host","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-http_proxy_host","()",""],["http_proxy_password","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-http_proxy_password","()",""],["http_proxy_port","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-http_proxy_port","()",""],["http_proxy_user","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-http_proxy_user","()",""],["id","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-id","(attachment, style_name)","<p>Returns the id of the instance.\n"],["id_partition","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-id_partition","(attachment, style_name)","<p>Returns the id of the instance in a split path form. e.g. returns\n000/001/234 for an id of 1234.\n"],["identified_as_animated?","Paperclip::Thumbnail","Paperclip/Thumbnail.html#method-i-identified_as_animated-3F","()","<p>Return true if ImageMagick’s <code>identify</code> returns an animated\nformat\n"],["identify","Paperclip::Processor","Paperclip/Processor.html#method-i-identify","(arguments = \"\", local_options = {})","<p>The identify method runs the identify binary with the provided arguments.\nSee Paperclip.run for the available …\n"],["in","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-in","(range)",""],["included","Paperclip::Callbacks","Paperclip/Callbacks.html#method-c-included","(base)",""],["included","Paperclip::Glue","Paperclip/Glue.html#method-c-included","(base)",""],["included","Paperclip::Schema","Paperclip/Schema.html#method-c-included","(base)",""],["included?","Paperclip::Shoulda::Matchers::HaveAttachedFileMatcher","Paperclip/Shoulda/Matchers/HaveAttachedFileMatcher.html#method-i-included-3F","()",""],["index","ProductsController","ProductsController.html#method-i-index","()","<p>this method display all products created by all users\n"],["index","WatchlistsController","WatchlistsController.html#method-i-index","()",""],["initializer","MockUrlGeneratorBuilder","MockUrlGeneratorBuilder.html#method-i-initializer","()",""],["insert","Paperclip::Railtie","Paperclip/Railtie.html#method-c-insert","()",""],["inspect","Paperclip::AbstractAdapter","Paperclip/AbstractAdapter.html#method-i-inspect","()",""],["inspect","Paperclip::Geometry","Paperclip/Geometry.html#method-i-inspect","()","<p>Same as to_s\n"],["instance","MockAttachment","MockAttachment.html#method-i-instance","()",""],["instance_read","Paperclip::Attachment","Paperclip/Attachment.html#method-i-instance_read","(attr)","<p>Reads the attachment-specific attribute on the instance. See instance_write\nfor more details.\n"],["instance_respond_to?","Paperclip::Attachment","Paperclip/Attachment.html#method-i-instance_respond_to-3F","(attr)","<p>Determines whether the instance responds to this attribute. Used to prevent\ncalculations on fields we …\n"],["instance_write","Paperclip::Attachment","Paperclip/Attachment.html#method-i-instance_write","(attr, value)","<p>Writes the attachment-specific attribute on the instance. For example,\ninstance_write(:file_name, “ …\n"],["interpolate","MockInterpolator","MockInterpolator.html#method-i-interpolate","(pattern, attachment, style_name)",""],["interpolate","Paperclip::Interpolations","Paperclip/Interpolations.html#method-c-interpolate","(pattern, *args)","<p>Perform the actual interpolation. Takes the pattern to interpolate and the\narguments to pass, which are …\n"],["interpolates","Paperclip::Helpers","Paperclip/Helpers.html#method-i-interpolates","(key, &block)",""],["io_adapters","Paperclip","Paperclip.html#method-c-io_adapters","()",""],["io_adapters=","Paperclip","Paperclip.html#method-c-io_adapters-3D","(new_registry)",""],["larger","Paperclip::Geometry","Paperclip/Geometry.html#method-i-larger","()","<p>Returns the larger of the two dimensions\n"],["less_than","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-less_than","(size)",""],["list_my_products","ProductsController","ProductsController.html#method-i-list_my_products","()","<p>this method collects all products associated with current_user\n"],["load_processor","Paperclip::ProcessorHelpers","Paperclip/ProcessorHelpers.html#method-i-load_processor","(name)",""],["log","Paperclip::Logger","Paperclip/Logger.html#method-i-log","(message)","<p>Log a paperclip-specific line. This will log to STDOUT by default. Set\nPaperclip.options to false to …\n"],["logger=","Paperclip::Logger","Paperclip/Logger.html#method-i-logger-3D","(logger)",""],["lower_than_high?","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-lower_than_high-3F","()",""],["lower_than_low?","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-lower_than_low-3F","()",""],["make","Paperclip::Processor","Paperclip/Processor.html#method-c-make","(file, options = {})",""],["make","Paperclip::Processor","Paperclip/Processor.html#method-i-make","()",""],["make","Paperclip::Thumbnail","Paperclip/Thumbnail.html#method-i-make","()","<p>Performs the conversion of the <code>file</code> into a thumbnail. Returns\nthe Tempfile that contains the new image. …\n"],["make","PaperclipTest","PaperclipTest.html#method-i-make","(file, options = {}, attachment = nil)",""],["make_tmpname","Paperclip::Tempfile","Paperclip/Tempfile.html#method-i-make_tmpname","(prefix_suffix, n)","<p>Due to how ImageMagick handles its image format conversion and how Tempfile\nhandles its naming scheme, …\n"],["matches?","Paperclip::Shoulda::Matchers::HaveAttachedFileMatcher","Paperclip/Shoulda/Matchers/HaveAttachedFileMatcher.html#method-i-matches-3F","(subject)",""],["matches?","Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html#method-i-matches-3F","(subject)",""],["matches?","Paperclip::Shoulda::Matchers::ValidateAttachmentPresenceMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentPresenceMatcher.html#method-i-matches-3F","(subject)",""],["matches?","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-matches-3F","(subject)",""],["migration_class_name","PaperclipGenerator","PaperclipGenerator.html#method-i-migration_class_name","()",""],["migration_file_name","PaperclipGenerator","PaperclipGenerator.html#method-i-migration_file_name","()",""],["migration_name","PaperclipGenerator","PaperclipGenerator.html#method-i-migration_name","()",""],["missing_attachments_styles","Paperclip","Paperclip.html#method-c-missing_attachments_styles","()","<p>Returns hash with styles missing from recent run of rake\npaperclip:refresh:missing_styles\n\n<pre class=\"ruby\">{\n  :<span class=\"ruby-constant\">User</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["modify_table","Object","Object.html#method-i-modify_table","(table_name, &block)",""],["negative_failure_message","Paperclip::Shoulda::Matchers::HaveAttachedFileMatcher","Paperclip/Shoulda/Matchers/HaveAttachedFileMatcher.html#method-i-negative_failure_message","()",""],["negative_failure_message","Paperclip::Shoulda::Matchers::ValidateAttachmentPresenceMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentPresenceMatcher.html#method-i-negative_failure_message","()",""],["negative_failure_message","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-negative_failure_message","()",""],["new","AdapterRegistryTest::AdapterTest","AdapterRegistryTest/AdapterTest.html#method-c-new","(target)",""],["new","MockAttachment","MockAttachment.html#method-c-new","(options = {})",""],["new","MockInterpolator","MockInterpolator.html#method-c-new","(options = {})",""],["new","MockUrlGeneratorBuilder","MockUrlGeneratorBuilder.html#method-i-new","(attachment, attachment_options)",""],["new","Paperclip::AdapterRegistry","Paperclip/AdapterRegistry.html#method-c-new","()",""],["new","Paperclip::Attachment","Paperclip/Attachment.html#method-c-new","(name, instance, options = {})","<p>Creates an Attachment object. <code>name</code> is the name of the\nattachment, <code>instance</code> is the ActiveRecord object …\n"],["new","Paperclip::AttachmentAdapter","Paperclip/AttachmentAdapter.html#method-c-new","(target)",""],["new","Paperclip::AttachmentOptions","Paperclip/AttachmentOptions.html#method-c-new","(options)",""],["new","Paperclip::ContentTypeDetector","Paperclip/ContentTypeDetector.html#method-c-new","(filename)",""],["new","Paperclip::FileAdapter","Paperclip/FileAdapter.html#method-c-new","(target)",""],["new","Paperclip::Geometry","Paperclip/Geometry.html#method-c-new","(width = nil, height = nil, modifier = nil)","<p>Gives a Geometry representing the given height and width\n"],["new","Paperclip::IdentityAdapter","Paperclip/IdentityAdapter.html#method-i-new","(adapter)",""],["new","Paperclip::NilAdapter","Paperclip/NilAdapter.html#method-c-new","(target)",""],["new","Paperclip::Processor","Paperclip/Processor.html#method-c-new","(file, options = {})",""],["new","Paperclip::Shoulda::Matchers::HaveAttachedFileMatcher","Paperclip/Shoulda/Matchers/HaveAttachedFileMatcher.html#method-c-new","(attachment_name)",""],["new","Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html#method-c-new","(attachment_name)",""],["new","Paperclip::Shoulda::Matchers::ValidateAttachmentPresenceMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentPresenceMatcher.html#method-c-new","(attachment_name)",""],["new","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-c-new","(attachment_name)",""],["new","Paperclip::StringioAdapter","Paperclip/StringioAdapter.html#method-c-new","(target)",""],["new","Paperclip::Style","Paperclip/Style.html#method-c-new","(name, definition, attachment)","<p>Creates a Style object. <code>name</code> is the name of the attachment,\n<code>definition</code> is the style definition from  …\n"],["new","Paperclip::Thumbnail","Paperclip/Thumbnail.html#method-c-new","(file, options = {}, attachment = nil)","<p>Creates a Thumbnail object set to work on the <code>file</code> given. It\nwill attempt to transform the image into …\n"],["new","Paperclip::UploadedFileAdapter","Paperclip/UploadedFileAdapter.html#method-c-new","(target)",""],["new","Paperclip::UriAdapter","Paperclip/UriAdapter.html#method-c-new","(target)",""],["new","Paperclip::UrlGenerator","Paperclip/UrlGenerator.html#method-c-new","(attachment, attachment_options)",""],["new","Paperclip::Validators::AttachmentContentTypeValidator","Paperclip/Validators/AttachmentContentTypeValidator.html#method-c-new","(options)",""],["new","Paperclip::Validators::AttachmentSizeValidator","Paperclip/Validators/AttachmentSizeValidator.html#method-c-new","(options)",""],["new","ProductsController","ProductsController.html#method-i-new","()","<p>GET /products/new GET /products/new.json\n"],["new","SessionsController","SessionsController.html#method-i-new","()",""],["new","UsersController","UsersController.html#method-i-new","()",""],["new_application_command","RailsCommandHelpers","RailsCommandHelpers.html#method-i-new_application_command","()",""],["nil?","Paperclip::NilAdapter","Paperclip/NilAdapter.html#method-i-nil-3F","()",""],["no_error_when_valid?","Paperclip::Shoulda::Matchers::ValidateAttachmentPresenceMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentPresenceMatcher.html#method-i-no_error_when_valid-3F","()",""],["options","Paperclip","Paperclip.html#method-c-options","()","<p>Provides configurability to Paperclip. The options available are:\n<p>whiny: Will raise an error if Paperclip …\n"],["original_filename","Paperclip::Attachment","Paperclip/Attachment.html#method-i-original_filename","()","<p>Returns the name of the file as originally assigned, and lives in the\n&lt;attachment&gt;_file_name attribute …\n"],["original_filename","Paperclip::NilAdapter","Paperclip/NilAdapter.html#method-i-original_filename","()",""],["override_method","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-override_method","(object, method, &replacement)",""],["paperclip_fixture","Paperclip::Shoulda","Paperclip/Shoulda.html#method-i-paperclip_fixture","(model, attachment, extension)","<p>Stub S3 and return a file for attachment. Best with Factory Girl. Uses a\nstrict directory convention: …\n"],["param","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-param","(attachment, style_name)","<p>Returns the #to_param of the instance.\n"],["parse","Paperclip::Geometry","Paperclip/Geometry.html#method-c-parse","(string)","<p>Parses a “WxH” formatted string, where W is the width and H is the height.\n"],["parse_credentials","Paperclip::Storage::Fog","Paperclip/Storage/Fog.html#method-i-parse_credentials","(creds)",""],["parse_credentials","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-parse_credentials","(creds)",""],["passes_validation_with_size","Paperclip::Shoulda::Matchers::ValidateAttachmentSizeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentSizeMatcher.html#method-i-passes_validation_with_size","(new_size)",""],["path","Paperclip::Attachment","Paperclip/Attachment.html#method-i-path","(style_name = default_style)","<p>Returns the path of the attachment as defined by the :path option. If the\nfile is stored in the filesystem …\n"],["path_to","NavigationHelpers","NavigationHelpers.html#method-i-path_to","(page_name)","<p>Maps a name to a path. Used by the\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">When</span> <span class=\"ruby-regexp\">%r^I go to (.+)$/</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">page_name</span><span class=\"ruby-operator\">|</span>\n</pre>\n<p>step definition in web_steps.rb …\n"],["present?","Paperclip::Attachment","Paperclip/Attachment.html#method-i-present-3F","()",""],["processor_options","Paperclip::Style","Paperclip/Style.html#method-i-processor_options","()","<p>Supplies the hash of options that processors expect to receive as their\nsecond argument Arguments other …\n"],["processors","Paperclip::Attachment","Paperclip/Attachment.html#method-i-processors","()",""],["processors","Paperclip::Style","Paperclip/Style.html#method-i-processors","()","<p>retrieves from the attachment the processors defined in the\nhas_attached_file call (which method (in …\n"],["public_url","Paperclip::Storage::Fog","Paperclip/Storage/Fog.html#method-i-public_url","(style = default_style)",""],["rails_env","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-rails_env","(attachment, style_name)","<p>Returns the Rails.env constant.\n"],["rails_env","S3Test","S3Test.html#method-i-rails_env","(env)",""],["rails_root","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-rails_root","(attachment, style_name)","<p>Returns the Rails.root constant.\n"],["read","Paperclip::AbstractAdapter","Paperclip/AbstractAdapter.html#method-i-read","(length = nil, buffer = nil)",""],["read","Paperclip::NilAdapter","Paperclip/NilAdapter.html#method-i-read","(*args)",""],["read_timeout=","FakeWeb::StubSocket","FakeWeb/StubSocket.html#method-i-read_timeout-3D","(ignored)",""],["rebuild_class","Object","Object.html#method-i-rebuild_class","(options = {})",""],["rebuild_meta_class_of","Object","Object.html#method-i-rebuild_meta_class_of","(obj, options = {})",""],["rebuild_model","Object","Object.html#method-i-rebuild_model","(options = {})",""],["redirect_back_or","SessionsHelper","SessionsHelper.html#method-i-redirect_back_or","(default)",""],["register","Paperclip::AdapterRegistry","Paperclip/AdapterRegistry.html#method-i-register","(handler_class, &block)",""],["register_processor","Paperclip::ProcessorHelpers","Paperclip/ProcessorHelpers.html#method-i-register_processor","(name, processor)","<p>You can add your own processor via the Paperclip configuration. Normally\nPaperclip will load all processors …\n"],["registered?","Paperclip::AdapterRegistry","Paperclip/AdapterRegistry.html#method-i-registered-3F","(target)",""],["registered_attachments_styles_path","Paperclip","Paperclip.html#method-c-registered_attachments_styles_path","()",""],["registration_confirmation","UserMailer","UserMailer.html#method-i-registration_confirmation","(user)",""],["rejected_types_and_failures","Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html#method-i-rejected_types_and_failures","()",""],["rejected_types_rejected?","Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html#method-i-rejected_types_rejected-3F","()",""],["rejecting","Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html#method-i-rejecting","(*types)",""],["remove_attachment","Paperclip::Schema::Statements","Paperclip/Schema/Statements.html#method-i-remove_attachment","(table_name, *attachment_names)",""],["reprocess!","Paperclip::Attachment","Paperclip/Attachment.html#method-i-reprocess-21","(*style_args)","<p>This method really shouldn’t be called that often. It’s expected use is in\nthe paperclip:refresh rake …\n"],["require_everything_in_directory","Object","Object.html#method-i-require_everything_in_directory","(directory_name)",""],["reset_class","Object","Object.html#method-i-reset_class","(class_name)",""],["reset_duplicate_clash_check!","Paperclip::Helpers","Paperclip/Helpers.html#method-i-reset_duplicate_clash_check-21","()",""],["reset_table","Object","Object.html#method-i-reset_table","(table_name, &block)",""],["resize_to","Paperclip::Geometry","Paperclip/Geometry.html#method-i-resize_to","(geometry)","<p>resize to a new geometry @param geometry [String] the Paperclip geometry\ndefinition to resize to @example …\n"],["respond_to?","MockAttachment","MockAttachment.html#method-i-respond_to-3F","(meth)",""],["responds?","Paperclip::Shoulda::Matchers::HaveAttachedFileMatcher","Paperclip/Shoulda/Matchers/HaveAttachedFileMatcher.html#method-i-responds-3F","()",""],["run","Paperclip::Helpers","Paperclip/Helpers.html#method-i-run","(cmd, arguments = \"\", interpolation_values = {}, local_options = {})","<p>The run method takes the name of a binary to run, the arguments to that\nbinary and some options:\n\n<pre>:command_path ...</pre>\n"],["run_paperclip_callbacks","FakeModel","FakeModel.html#method-i-run_paperclip_callbacks","(name, *args)",""],["run_paperclip_callbacks","Paperclip::Callbacks::Running","Paperclip/Callbacks/Running.html#method-i-run_paperclip_callbacks","(callback, opts = nil, &block)",""],["runner_command","RailsCommandHelpers","RailsCommandHelpers.html#method-i-runner_command","()",""],["s3_bucket","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-s3_bucket","()",""],["s3_credentials","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-s3_credentials","()",""],["s3_files_for","IntegrationTest","IntegrationTest.html#method-i-s3_files_for","(attachment)",""],["s3_headers_for","IntegrationTest","IntegrationTest.html#method-i-s3_headers_for","(attachment, style)",""],["s3_host_alias","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-s3_host_alias","()",""],["s3_host_name","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-s3_host_name","()",""],["s3_interface","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-s3_interface","()",""],["s3_object","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-s3_object","(style_name = default_style)",""],["s3_permissions","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-s3_permissions","(style = default_style)",""],["s3_protocol","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-s3_protocol","(style = default_style, with_colon = false)",""],["s3_url_options","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-s3_url_options","()",""],["sanitize_hash","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-sanitize_hash","(hash)",""],["save","Paperclip::Attachment","Paperclip/Attachment.html#method-i-save","()","<p>Saves the file, if there are no errors. If there are, it flushes them to\nthe instance’s errors and returns …\n"],["save_current_attachments_styles!","Paperclip","Paperclip.html#method-c-save_current_attachments_styles-21","()",""],["search","ProductsController","ProductsController.html#method-i-search","()",""],["selector_for","HtmlSelectorsHelpers","HtmlSelectorsHelpers.html#method-i-selector_for","(locator)","<p>Maps a name to a selector. Used primarily by the\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">When</span> <span class=\"ruby-regexp\">%r^(.+) within (.+)$/</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">step</span>, <span class=\"ruby-identifier\">scope</span><span class=\"ruby-operator\">|</span>\n</pre>\n<p>step definitions …\n"],["set_permissions","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-set_permissions","(permissions)",""],["setup","AttachmentAdapterTest","AttachmentAdapterTest.html#method-i-setup","()",""],["setup","AttachmentContentTypeValidatorTest","AttachmentContentTypeValidatorTest.html#method-i-setup","()",""],["setup","AttachmentPresenceValidatorTest","AttachmentPresenceValidatorTest.html#method-i-setup","()",""],["setup","AttachmentSizeValidatorTest","AttachmentSizeValidatorTest.html#method-i-setup","()",""],["setup","S3Test","S3Test.html#method-i-setup","()",""],["setup","SchemaTest","SchemaTest.html#method-i-setup","()",""],["setup","Test::Unit::TestCase","Test/Unit/TestCase.html#method-i-setup","()",""],["setup","ValidatorsTest","ValidatorsTest.html#method-i-setup","()",""],["should_accept_dummy_class","Object","Object.html#method-i-should_accept_dummy_class","()",""],["should_allow_attachment_file_size","AttachmentSizeValidatorTest","AttachmentSizeValidatorTest.html#method-c-should_allow_attachment_file_size","(size)",""],["should_have_attached_file","Paperclip::Shoulda","Paperclip/Shoulda.html#method-i-should_have_attached_file","(name)","<p>This will test whether you have defined your attachment correctly by\nchecking for all the required fields …\n"],["should_not_allow_attachment_file_size","AttachmentSizeValidatorTest","AttachmentSizeValidatorTest.html#method-c-should_not_allow_attachment_file_size","(size, options = {})",""],["should_reject_dummy_class","Object","Object.html#method-i-should_reject_dummy_class","()",""],["should_validate_attachment_content_type","Paperclip::Shoulda","Paperclip/Shoulda.html#method-i-should_validate_attachment_content_type","(name, options = {})","<p>Tests that you have content_type validations specified. There are two\noptions, :valid and :invalid.  …\n"],["should_validate_attachment_presence","Paperclip::Shoulda","Paperclip/Shoulda.html#method-i-should_validate_attachment_presence","(name)","<p>Tests for validations on the presence of the attachment.\n"],["should_validate_attachment_size","Paperclip::Shoulda","Paperclip/Shoulda.html#method-i-should_validate_attachment_size","(name, options = {})","<p>Tests to ensure that you have file size validations turned on. You can pass\nthe same options to this …\n"],["show","BidsController","BidsController.html#method-i-show","()",""],["show","ProductsController","ProductsController.html#method-i-show","()","<p>GET /products/1 GET /products/1.json\n"],["show","UsersController","UsersController.html#method-i-show","()",""],["show_watchlist","ProductsController","ProductsController.html#method-i-show_watchlist","()",""],["sign_in","Object","Object.html#method-i-sign_in","(user)",""],["sign_in","SessionsHelper","SessionsHelper.html#method-i-sign_in","(user)",""],["sign_out","SessionsHelper","SessionsHelper.html#method-i-sign_out","()",""],["signed_in?","SessionsHelper","SessionsHelper.html#method-i-signed_in-3F","()",""],["signed_in_user","SessionsHelper","SessionsHelper.html#method-i-signed_in_user","()",""],["silence_warnings","Object","Object.html#method-i-silence_warnings","()",""],["size","Paperclip::Attachment","Paperclip/Attachment.html#method-i-size","()","<p>Returns the size of the file as originally assigned, and lives in the\n&lt;attachment&gt;_file_size attribute …\n"],["size","Paperclip::NilAdapter","Paperclip/NilAdapter.html#method-i-size","()",""],["smaller","Paperclip::Geometry","Paperclip/Geometry.html#method-i-smaller","()","<p>Returns the smaller of the two dimensions\n"],["source_file_options","Paperclip::Style","Paperclip/Style.html#method-i-source_file_options","()",""],["source_root","PaperclipGenerator","PaperclipGenerator.html#method-c-source_root","()",""],["square?","Paperclip::Geometry","Paperclip/Geometry.html#method-i-square-3F","()","<p>True if the dimensions represent a square\n"],["store_location","SessionsHelper","SessionsHelper.html#method-i-store_location","()",""],["stub_paperclip_s3","Paperclip::Shoulda","Paperclip/Shoulda.html#method-i-stub_paperclip_s3","(model, attachment, extension)","<p>Stubs the HTTP PUT for an attachment using S3 storage.\n<p>@example\n\n<pre>stub_paperclip_s3('user', 'avatar', 'png')</pre>\n"],["style","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-style","(attachment, style_name)","<p>Returns the style, or the default style if nil is supplied.\n"],["styles","Paperclip::Attachment","Paperclip/Attachment.html#method-i-styles","()",""],["summarize_hash","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-summarize_hash","(hash)",""],["teardown","S3Test","S3Test.html#method-i-teardown","()",""],["teardown","SchemaTest","SchemaTest.html#method-i-teardown","()",""],["thumb","AttachmentTest","AttachmentTest.html#method-i-thumb","()",""],["time_zone","Paperclip::Attachment","Paperclip/Attachment.html#method-i-time_zone","()","<p>The time zone to use for timestamp interpolation.  Using the default time\nzone ensures that results are …\n"],["timestamp","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-timestamp","(attachment, style_name)","<p>Returns the timestamp as defined by the &lt;attachment&gt;_updated_at field\nin the server default time …\n"],["to_s","Paperclip::Attachment","Paperclip/Attachment.html#method-i-to_s","(style_name = default_style)","<p>Alias to <code>url</code>\n"],["to_s","Paperclip::Geometry","Paperclip/Geometry.html#method-i-to_s","()","<p>Returns the width and height in a format suitable to be passed to\nGeometry.parse\n"],["transformation_command","Paperclip::Thumbnail","Paperclip/Thumbnail.html#method-i-transformation_command","()","<p>Returns the command ImageMagick’s <code>convert</code> needs to transform\nthe image into the thumbnail.\n"],["transformation_to","Paperclip::Geometry","Paperclip/Geometry.html#method-i-transformation_to","(dst, crop = false)","<p>Returns the scaling and cropping geometries (in string-based ImageMagick\nformat) neccessary to transform …\n"],["type_allowed?","Paperclip::Shoulda::Matchers::ValidateAttachmentContentTypeMatcher","Paperclip/Shoulda/Matchers/ValidateAttachmentContentTypeMatcher.html#method-i-type_allowed-3F","(type)",""],["up","DropProductIdFromCategories","DropProductIdFromCategories.html#method-i-up","()",""],["up","DropProductsUsers","DropProductsUsers.html#method-i-up","()",""],["up","ProductsUsers","ProductsUsers.html#method-i-up","()",""],["up","RemoveCategoryFromProducts","RemoveCategoryFromProducts.html#method-i-up","()",""],["up","RemoveProductIdFromCategories","RemoveProductIdFromCategories.html#method-i-up","()",""],["update","ProductsController","ProductsController.html#method-i-update","()","<p>PUT /products/1 PUT /products/1.json\n"],["update","UsersController","UsersController.html#method-i-update","()",""],["updated_at","Paperclip::Attachment","Paperclip/Attachment.html#method-i-updated_at","()","<p>Returns the last modified time of the file as originally assigned, and\nlives in the &lt;attachment&gt; …\n"],["updated_at","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-updated_at","(attachment, style_name)","<p>Returns an integer timestamp that is time zone-neutral, so that paths\nremain valid even if a server’s …\n"],["uploaded_file","Paperclip::Attachment","Paperclip/Attachment.html#method-i-uploaded_file","()","<p>Returns the uploaded file if present.\n"],["url","Paperclip::Attachment","Paperclip/Attachment.html#method-i-url","(style_name = default_style, options = {})","<p>Returns the public URL of the attachment with a given style. This does not\nnecessarily need to point …\n"],["url","Paperclip::Interpolations","Paperclip/Interpolations.html#method-i-url","(attachment, style_name)",""],["using_http_proxy?","Paperclip::Storage::S3","Paperclip/Storage/S3.html#method-i-using_http_proxy-3F","()",""],["valid_attributes","Object","Object.html#method-i-valid_attributes","()","<p>This should return the minimal set of attributes required to create a valid\nProduct. As you add validations …\n"],["valid_session","Object","Object.html#method-i-valid_session","()","<p>This should return the minimal set of values that should be in the session\nin order to pass any filters …\n"],["validate","Paperclip::Validators::AttachmentPresenceValidator","Paperclip/Validators/AttachmentPresenceValidator.html#method-i-validate","(record)",""],["validate_attachment_content_type","Paperclip::Shoulda::Matchers","Paperclip/Shoulda/Matchers.html#method-i-validate_attachment_content_type","(name)","<p>Ensures that the given instance or class validates the content type of the\ngiven attachment as specified. …\n"],["validate_attachment_presence","Paperclip::Shoulda::Matchers","Paperclip/Shoulda/Matchers.html#method-i-validate_attachment_presence","(name)","<p>Ensures that the given instance or class validates the presence of the\ngiven attachment.\n<p>describe User …\n"],["validate_attachment_size","Paperclip::Shoulda::Matchers","Paperclip/Shoulda/Matchers.html#method-i-validate_attachment_size","(name)","<p>Ensures that the given instance or class validates the size of the given\nattachment as specified.\n<p>Examples: …\n"],["validate_each","Paperclip::Validators::AttachmentContentTypeValidator","Paperclip/Validators/AttachmentContentTypeValidator.html#method-i-validate_each","(record, attribute, value)",""],["validate_each","Paperclip::Validators::AttachmentSizeValidator","Paperclip/Validators/AttachmentSizeValidator.html#method-i-validate_each","(record, attr_name, value)",""],["validates_attachment","Paperclip::Validators::ClassMethods","Paperclip/Validators/ClassMethods.html#method-i-validates_attachment","(*attributes)","<p>This method is a shortcut to validator classes that is in\n“Attachment…Validator” format. …\n"],["validates_attachment_content_type","Paperclip::Validators::HelperMethods","Paperclip/Validators/HelperMethods.html#method-i-validates_attachment_content_type","(*attr_names)","<p>Places ActiveRecord-style validations on the content type of the file\nassigned. The possible options …\n"],["validates_attachment_presence","Paperclip::Validators::HelperMethods","Paperclip/Validators/HelperMethods.html#method-i-validates_attachment_presence","(*attr_names)","<p>Places ActiveRecord-style validations on the presence of a file. Options:\n<p><code>if</code>: A lambda or name of an instance ...\n"],["validates_attachment_size","Paperclip::Validators::HelperMethods","Paperclip/Validators/HelperMethods.html#method-i-validates_attachment_size","(*attr_names)","<p>Places ActiveRecord-style validations on the size of the file assigned. The\npossible options are:\n<p><code>in</code>: ...\n"],["vertical?","Paperclip::Geometry","Paperclip/Geometry.html#method-i-vertical-3F","()","<p>True if the dimensions represent a vertical rectangle\n"],["whiny","Paperclip::Style","Paperclip/Style.html#method-i-whiny","()","<p>retrieves from the attachment the whiny setting\n"],["whiny?","Paperclip::Style","Paperclip/Style.html#method-i-whiny-3F","()","<p>returns true if we’re inclined to grumble\n"],["with_exitstatus_returning","Object","Object.html#method-i-with_exitstatus_returning","(code)",""],["with_scope","WithinHelpers","WithinHelpers.html#method-i-with_scope","(locator)",""],["Gemfile","","Gemfile.html","","<p>source ‘rubygems.org’\n<p>gem ‘rails’, ‘3.2.7’ gem ‘bootstrap-sass’, ‘2.0.4’ gem ‘bcrypt-ruby’,\n‘3.0.1’\n<p>#  …\n"],["Rakefile","","Rakefile.html","","<p>#!/usr/bin/env rake # Add your own tasks in files placed in lib/tasks\nending in .rake, # for example …\n"],["robots","","public/robots_txt.html","","<p>See www.robotstxt.org/wc/norobots.html for documentation on how to use the\nrobots.txt file\n<p>To ban all …\n"],["Appraisals","","vendor/plugins/paperclip/Appraisals.html","","<p>appraise “3.0” do\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">gem</span> <span class=\"ruby-string\">&quot;rails&quot;</span>, <span class=\"ruby-string\">&quot;~&gt; 3.0.15&quot;</span>\n<span class=\"ruby-identifier\">gem</span> <span class=\"ruby-string\">&quot;paperclip&quot;</span>, :<span class=\"ruby-identifier\">path</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;../&quot;</span>\n</pre>\n<p>end\n"],["Gemfile","","vendor/plugins/paperclip/Gemfile.html","","<p>source “rubygems.org”\n<p>gemspec\n<p>gem “jruby-openssl”, :platform =&gt; :jruby gem\n“activerecord-jdbcsqlite3-adapter”, …\n"],["LICENSE","","vendor/plugins/paperclip/LICENSE.html","","<p>LICENSE\n<p>The MIT License\n<p>Copyright © 2008 Jon Yurek and thoughtbot, inc.\n"],["NEWS","","vendor/plugins/paperclip/NEWS.html","","<p>New in 3.2.0:\n<p>Bug fix: Use the new correct Amazon S3 encryption header.\n<p>Bug fix: The rake task respects …\n"],["Rakefile","","vendor/plugins/paperclip/Rakefile.html","","<p>require ‘bundler/gem_tasks’ require ‘appraisal’ require ‘rake/testtask’\nrequire ‘cucumber/rake/task’ …\n"],["UPGRADING","","vendor/plugins/paperclip/UPGRADING.html","","<p>################################################## #  NOTE FOR UPGRADING\nFROM PRE-3.0 VERSION       # …\n"],["boot_config","","vendor/plugins/paperclip/features/support/fixtures/boot_config_txt.html","","<p>class Rails::Boot\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">run</span>\n  <span class=\"ruby-identifier\">load_initializer</span>\n\n  <span class=\"ruby-constant\">Rails</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Initializer</span>.<span class=\"ruby-identifier\">class_eval</span> <span class=\"ruby-keyword\">do</span>\n    <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">load_gems</span>\n   <span class=\"ruby-operator\">...</span>\n</pre>\n"],["gemfile","","vendor/plugins/paperclip/features/support/fixtures/gemfile_txt.html","","<p>source “rubygems.org”\n<p>gem “rails”, “RAILS_VERSION” gem “rdoc” …\n"],["preinitializer","","vendor/plugins/paperclip/features/support/fixtures/preinitializer_txt.html","","<p>begin\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&quot;rubygems&quot;</span>\n<span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&quot;bundler&quot;</span>\n</pre>\n<p>rescue LoadError\n"],["USAGE","","vendor/plugins/paperclip/lib/generators/paperclip/USAGE.html","","<p>Description:\n\n<pre>Explain the generator</pre>\n<p>Example:\n"],["text","","vendor/plugins/paperclip/test/fixtures/text_txt.html","","<p>paperclip!\n"]]}}